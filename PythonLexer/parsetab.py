
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'fileAND AS ASSIGNMENT AT BIN_NUMBER BITWISE_AND BITWISE_OR BREAK CLASS COLON COMMA CONTINUE DEDENT DEF DEL DIVISION DIVISION_ASSIGNMENT DOT ELIF ELSE ENDMARKER EQUALITY EXPONENTIATION EXPONENTIATION_ASSIGNMENT FALSE FOR F_NUMBER GLOBAL GREATER GREATER_EQUAL HEX_NUMBER IDENTIFIER IF IN INDENT INEQUALITY INTEGER_DIVISION INTEGER_DIVISION_ASSIGNMENT IS LESSER LESSER_EQUAL L_CB L_PARENTHESIS L_SHIFT L_SQB MODULUS MODULUS_ASSIGNMENT NEWLINE NONE NOT NUMBER OCT_NUMBER OR PASS PRODUCT PRODUCT_ASSIGNMENT RETURN R_CB R_PARENTHESIS R_SHIFT R_SQB SEMICOLON STRING SUBTRACTION SUBTRACTION_ASSIGNMENT SUM SUM_ASSIGNMENT TRIPLE_STRING TRUE WHILE WHITESPACEfile : statements ENDMARKER\n    statements : statements statement\n                  | statement\n    statement : compound_stmt\n                 | simple_stmts\n    simple_stmts : simple_stmts SEMICOLON simple_stmt\n                    | simple_stmt NEWLINE\n    simple_stmt : assignment\n                   | return_stmt\n                   | PASS\n                   | del_stmt\n                   | BREAK \n                   | CONTINUE \n                   | global_stmt\n    compound_stmt : function_def\n                     | if_stmt\n                     | class_def\n                     | for_stmt\n                     | while_stmt\n    assignment : IDENTIFIER augmentation_assignment expressions\n                  | IDENTIFIER augmentation_assignment IDENTIFIER\n    augmentation_assignment : SUM_ASSIGNMENT\n                               | SUBTRACTION_ASSIGNMENT\n                               | PRODUCT_ASSIGNMENT\n                               | DIVISION_ASSIGNMENT\n                               | MODULUS_ASSIGNMENT\n                               | EXPONENTIATION_ASSIGNMENT\n                               | INTEGER_DIVISION_ASSIGNMENT\n    return_stmt : RETURN expressions\n    global_stmt : GLOBAL namelist\n    del_stmt : DEL namelist\n    namelist : namelist COMMA IDENTIFIER\n                | IDENTIFIER\n    block : NEWLINE INDENT statements DEDENT\n             | simple_stmts\n    class_def : CLASS IDENTIFIER COLON block\n                 | CLASS IDENTIFIER L_PARENTHESIS R_PARENTHESIS COLON block\n                 | CLASS IDENTIFIER L_PARENTHESIS arguments R_PARENTHESIS COLON block   \n    function_def : DEF IDENTIFIER L_PARENTHESIS parameters R_PARENTHESIS COLON block\n                    | DEF IDENTIFIER L_PARENTHESIS R_PARENTHESIS COLON block\n    parameters : parameters COMMA IDENTIFIER\n                  | IDENTIFIER\n    if_stmt : IF named_expression COLON block elif_stmt\n               | IF named_expression COLON block else_block\n               | IF named_expression COLON block\n    elif_stmt : ELIF named_expression COLON block elif_stmt\n                 | ELIF named_expression COLON block else_block\n                 | ELIF named_expression COLON block\n    else_block : ELSE COLON block\n    while_stmt : WHILE named_expression COLON block\n    for_stmt : FOR IDENTIFIER IN expressions COLON else_block\n                | FOR IDENTIFIER IN expressions COLON block\n    expressions : expressions COMMA expression\n                   | expression\n    expression : disjunction\n                  | disjunction IF disjunction ELSE expression\n    disjunction : conjunction \n                   | conjunction OR disjunction\n    conjunction : inversion \n                   | inversion AND inversion\n    inversion : NOT inversion \n                 | comparison\n    named_expression : expression\n    comparison : bitwise_or \n                  | bitwise_or compare_op_list\n    compare_op_list : compare_op \n                       | compare_op_list compare_op\n    compare_op : EQUALITY bitwise_or \n                  | INEQUALITY bitwise_or \n                  | GREATER_EQUAL bitwise_or \n                  | LESSER_EQUAL bitwise_or \n                  | GREATER bitwise_or \n                  | LESSER bitwise_or \n                  | NOT IN bitwise_or \n                  | IS NOT bitwise_or \n                  | IN bitwise_or \n                  | IS bitwise_or \n    bitwise_or : bitwise_or BITWISE_OR bitwise_xor \n                  | bitwise_xor \n    bitwise_xor : bitwise_xor empty bitwise_and \n                   | bitwise_and\n    bitwise_and : bitwise_and BITWISE_AND shift_expr \n                   | shift_expr\n    shift_expr : shift_expr L_SHIFT sum\n                  | shift_expr R_SHIFT sum\n                  | sum\n    sum : sum SUM term\n           | sum SUBTRACTION term\n           | term\n    term : term PRODUCT factor \n            | term DIVISION factor \n            | term INTEGER_DIVISION factor \n            | term MODULUS factor\n            | factor\n    factor : SUM factor \n              | SUBTRACTION factor \n              | power\n    power : empty\n    arguments :\n    empty :'
    
_lr_action_items = {'DEF':([0,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,29,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,147,148,151,152,153,154,160,163,164,165,167,168,169,171,172,173,174,175,176,],[12,12,-3,-4,-5,-15,-16,-17,-18,-19,-8,-9,-10,-11,-12,-13,-14,-100,-2,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,-43,-44,12,-100,-74,-75,-40,12,-56,-37,-51,-52,-39,-49,-34,-38,-48,-46,-47,]),'IF':([0,2,3,4,5,6,7,8,9,10,14,17,18,19,20,21,22,23,24,25,29,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,147,148,149,151,152,153,154,160,163,164,165,167,168,169,171,172,173,174,175,176,],[14,14,-3,-4,-5,-15,-16,-17,-18,-19,-100,-100,-8,-9,-10,-11,-12,-13,-14,-100,-2,-7,-100,-22,-23,-24,-25,-26,-27,-28,72,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,-43,-44,-100,14,-100,-74,-75,-40,14,-56,-37,-51,-52,-39,-49,-34,-38,-48,-46,-47,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,29,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,147,148,151,152,153,154,160,163,164,165,167,168,169,171,172,173,174,175,176,],[15,15,-3,-4,-5,-15,-16,-17,-18,-19,-8,-9,-10,-11,-12,-13,-14,-100,-2,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,-43,-44,15,-100,-74,-75,-40,15,-56,-37,-51,-52,-39,-49,-34,-38,-48,-46,-47,]),'FOR':([0,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,29,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,147,148,151,152,153,154,160,163,164,165,167,168,169,171,172,173,174,175,176,],[16,16,-3,-4,-5,-15,-16,-17,-18,-19,-8,-9,-10,-11,-12,-13,-14,-100,-2,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,-43,-44,16,-100,-74,-75,-40,16,-56,-37,-51,-52,-39,-49,-34,-38,-48,-46,-47,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,29,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,147,148,151,152,153,154,160,163,164,165,167,168,169,171,172,173,174,175,176,],[17,17,-3,-4,-5,-15,-16,-17,-18,-19,-8,-9,-10,-11,-12,-13,-14,-100,-2,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,-43,-44,17,-100,-74,-75,-40,17,-56,-37,-51,-52,-39,-49,-34,-38,-48,-46,-47,]),'PASS':([0,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,29,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,146,147,148,151,152,153,154,155,157,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,],[20,20,-3,-4,-5,-15,-16,-17,-18,-19,-8,-9,-10,-11,-12,-13,-14,-100,-2,20,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,20,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,20,20,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,20,-43,-44,20,-100,-74,-75,20,20,20,-40,20,20,-56,-37,20,-51,-52,-39,20,-49,-34,-38,-48,-46,-47,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,29,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,146,147,148,151,152,153,154,155,157,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,],[22,22,-3,-4,-5,-15,-16,-17,-18,-19,-8,-9,-10,-11,-12,-13,-14,-100,-2,22,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,22,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,22,22,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,22,-43,-44,22,-100,-74,-75,22,22,22,-40,22,22,-56,-37,22,-51,-52,-39,22,-49,-34,-38,-48,-46,-47,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,29,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,146,147,148,151,152,153,154,155,157,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,],[23,23,-3,-4,-5,-15,-16,-17,-18,-19,-8,-9,-10,-11,-12,-13,-14,-100,-2,23,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,23,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,23,23,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,23,-43,-44,23,-100,-74,-75,23,23,23,-40,23,23,-56,-37,23,-51,-52,-39,23,-49,-34,-38,-48,-46,-47,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,12,15,16,18,19,20,21,22,23,24,25,26,27,29,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,145,146,147,148,151,152,153,154,155,157,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,],[13,13,-3,-4,-5,-15,-16,-17,-18,-19,32,59,60,-8,-9,-10,-11,-12,-13,-14,-100,65,65,-2,13,-7,69,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,106,-21,-20,13,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,13,13,-100,143,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,159,13,-43,-44,13,-100,-74,-75,13,13,13,-40,13,13,-56,-37,13,-51,-52,-39,13,-49,-34,-38,-48,-46,-47,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,29,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,146,147,148,151,152,153,154,155,157,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,],[25,25,-3,-4,-5,-15,-16,-17,-18,-19,-8,-9,-10,-11,-12,-13,-14,-100,-2,25,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,25,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,25,25,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,25,-43,-44,25,-100,-74,-75,25,25,25,-40,25,25,-56,-37,25,-51,-52,-39,25,-49,-34,-38,-48,-46,-47,]),'DEL':([0,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,29,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,146,147,148,151,152,153,154,155,157,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,],[26,26,-3,-4,-5,-15,-16,-17,-18,-19,-8,-9,-10,-11,-12,-13,-14,-100,-2,26,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,26,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,26,26,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,26,-43,-44,26,-100,-74,-75,26,26,26,-40,26,26,-56,-37,26,-51,-52,-39,26,-49,-34,-38,-48,-46,-47,]),'GLOBAL':([0,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,29,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,146,147,148,151,152,153,154,155,157,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,],[27,27,-3,-4,-5,-15,-16,-17,-18,-19,-8,-9,-10,-11,-12,-13,-14,-100,-2,27,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,27,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,27,27,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,27,-43,-44,27,-100,-74,-75,27,27,27,-40,27,27,-56,-37,27,-51,-52,-39,27,-49,-34,-38,-48,-46,-47,]),'$end':([1,28,],[0,-1,]),'ENDMARKER':([2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,29,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,147,148,152,153,154,160,164,165,167,168,169,171,172,173,174,175,176,],[28,-3,-4,-5,-15,-16,-17,-18,-19,-8,-9,-10,-11,-12,-13,-14,-100,-2,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,-43,-44,-100,-74,-75,-40,-56,-37,-51,-52,-39,-49,-34,-38,-48,-46,-47,]),'DEDENT':([3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,29,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,147,148,152,153,154,160,163,164,165,167,168,169,171,172,173,174,175,176,],[-3,-4,-5,-15,-16,-17,-18,-19,-8,-9,-10,-11,-12,-13,-14,-100,-2,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-45,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-36,-50,-53,-32,-43,-44,-100,-74,-75,-40,172,-56,-37,-51,-52,-39,-49,-34,-38,-48,-46,-47,]),'SEMICOLON':([5,18,19,20,21,22,23,24,25,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,152,153,154,164,],[30,-8,-9,-10,-11,-12,-13,-14,-100,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,30,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-53,-32,-100,-74,-75,-56,]),'NEWLINE':([11,18,19,20,21,22,23,24,25,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,146,152,153,154,155,157,158,162,164,166,170,],[31,-8,-9,-10,-11,-12,-13,-14,-100,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-21,-20,110,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,110,110,-100,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-53,-32,110,-100,-74,-75,110,110,110,110,-56,110,110,]),'SUM_ASSIGNMENT':([13,],[34,]),'SUBTRACTION_ASSIGNMENT':([13,],[35,]),'PRODUCT_ASSIGNMENT':([13,],[36,]),'DIVISION_ASSIGNMENT':([13,],[37,]),'MODULUS_ASSIGNMENT':([13,],[38,]),'EXPONENTIATION_ASSIGNMENT':([13,],[39,]),'INTEGER_DIVISION_ASSIGNMENT':([13,],[40,]),'NOT':([14,17,25,33,34,35,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,72,73,74,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,152,153,154,],[46,46,46,46,-22,-23,-24,-25,-26,-27,-28,46,85,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,46,46,46,85,-100,-66,-100,-100,-100,-100,-100,-100,-100,125,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,46,46,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,46,46,-74,-75,]),'SUM':([14,17,25,33,34,35,36,37,38,39,40,46,49,50,51,52,53,54,55,56,57,58,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,116,123,125,127,128,129,130,131,132,133,134,135,136,149,152,],[54,54,54,54,-22,-23,-24,-25,-26,-27,-28,54,-100,-98,-81,-83,92,54,-89,54,-94,-97,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-95,54,54,54,54,-96,54,54,-100,54,54,-80,-82,92,92,-87,-88,-90,-91,-92,-93,54,54,]),'SUBTRACTION':([14,17,25,33,34,35,36,37,38,39,40,46,49,50,51,52,53,54,55,56,57,58,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,116,123,125,127,128,129,130,131,132,133,134,135,136,149,152,],[56,56,56,56,-22,-23,-24,-25,-26,-27,-28,56,-100,-98,-81,-83,93,56,-89,56,-94,-97,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-95,56,56,56,56,-96,56,56,-100,56,56,-80,-82,93,93,-87,-88,-90,-91,-92,-93,56,56,]),'PRODUCT':([14,17,25,33,34,35,36,37,38,39,40,46,49,50,51,52,53,54,55,56,57,58,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,116,123,125,127,128,129,130,131,132,133,134,135,136,149,152,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,-100,-98,-81,-83,-86,-100,95,-100,-94,-97,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-100,-100,-100,-80,-82,-84,-85,95,95,-90,-91,-92,-93,-100,-100,]),'DIVISION':([14,17,25,33,34,35,36,37,38,39,40,46,49,50,51,52,53,54,55,56,57,58,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,116,123,125,127,128,129,130,131,132,133,134,135,136,149,152,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,-100,-98,-81,-83,-86,-100,96,-100,-94,-97,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-100,-100,-100,-80,-82,-84,-85,96,96,-90,-91,-92,-93,-100,-100,]),'INTEGER_DIVISION':([14,17,25,33,34,35,36,37,38,39,40,46,49,50,51,52,53,54,55,56,57,58,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,116,123,125,127,128,129,130,131,132,133,134,135,136,149,152,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,-100,-98,-81,-83,-86,-100,97,-100,-94,-97,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-100,-100,-100,-80,-82,-84,-85,97,97,-90,-91,-92,-93,-100,-100,]),'MODULUS':([14,17,25,33,34,35,36,37,38,39,40,46,49,50,51,52,53,54,55,56,57,58,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,116,123,125,127,128,129,130,131,132,133,134,135,136,149,152,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,-100,-98,-81,-83,-86,-100,98,-100,-94,-97,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-100,-100,-100,-80,-82,-84,-85,98,98,-90,-91,-92,-93,-100,-100,]),'L_SHIFT':([14,17,25,33,34,35,36,37,38,39,40,46,49,50,51,52,53,54,55,56,57,58,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,116,123,125,127,128,129,130,131,132,133,134,135,136,149,152,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,-100,-98,-81,90,-86,-100,-89,-100,-94,-97,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-100,-100,-100,-80,90,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,]),'R_SHIFT':([14,17,25,33,34,35,36,37,38,39,40,46,49,50,51,52,53,54,55,56,57,58,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,116,123,125,127,128,129,130,131,132,133,134,135,136,149,152,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,-100,-98,-81,91,-86,-100,-89,-100,-94,-97,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-100,-100,-100,-80,91,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,]),'BITWISE_AND':([14,17,25,33,34,35,36,37,38,39,40,46,49,50,51,52,53,54,55,56,57,58,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,116,123,125,127,128,129,130,131,132,133,134,135,136,149,152,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,-100,-98,89,-83,-86,-100,-89,-100,-94,-97,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-100,-100,-100,89,-82,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,]),'BITWISE_OR':([14,17,25,33,34,35,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,152,153,154,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,77,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-78,77,77,77,77,77,77,-100,77,-100,77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,77,77,]),'EQUALITY':([14,17,25,33,34,35,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,72,73,74,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,152,153,154,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,79,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-100,-100,-100,79,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,-74,-75,]),'INEQUALITY':([14,17,25,33,34,35,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,72,73,74,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,152,153,154,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,80,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-100,-100,-100,80,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,-74,-75,]),'GREATER_EQUAL':([14,17,25,33,34,35,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,72,73,74,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,152,153,154,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,81,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-100,-100,-100,81,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,-74,-75,]),'LESSER_EQUAL':([14,17,25,33,34,35,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,72,73,74,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,152,153,154,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,82,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-100,-100,-100,82,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,-74,-75,]),'GREATER':([14,17,25,33,34,35,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,72,73,74,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,152,153,154,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,83,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-100,-100,-100,83,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,-74,-75,]),'LESSER':([14,17,25,33,34,35,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,72,73,74,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,152,153,154,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,84,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-100,-100,-100,84,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,-74,-75,]),'IS':([14,17,25,33,34,35,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,72,73,74,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,152,153,154,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,87,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-100,-100,-100,87,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,-74,-75,]),'IN':([14,17,25,33,34,35,36,37,38,39,40,46,48,49,50,51,52,53,54,55,56,57,58,60,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,152,153,154,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,-100,86,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,102,-100,-100,-100,86,-100,-66,-100,-100,-100,-100,-100,-100,123,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,-74,-75,]),'AND':([14,17,25,33,34,35,36,37,38,39,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,72,73,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,152,153,154,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,74,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,-74,-75,]),'OR':([14,17,25,33,34,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,149,152,153,154,],[-100,-100,-100,-100,-22,-23,-24,-25,-26,-27,-28,73,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-100,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-100,-100,-74,-75,]),'COLON':([14,17,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,140,142,144,149,150,152,153,154,156,161,164,],[-100,-100,71,-63,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,100,103,-54,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,146,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,155,157,-53,158,-100,162,-100,-74,-75,166,170,-56,]),'ELIF':([18,19,20,21,22,23,24,25,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,109,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,152,153,154,164,172,174,],[-8,-9,-10,-11,-12,-13,-14,-100,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,149,-35,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-53,-32,-100,-74,-75,-56,-34,149,]),'ELSE':([18,19,20,21,22,23,24,25,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,67,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,152,153,154,157,164,172,174,],[-8,-9,-10,-11,-12,-13,-14,-100,-7,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,-29,-54,-31,-33,-30,-6,-21,-20,-100,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,150,-35,152,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,-53,-32,-100,-74,-75,150,-56,-34,150,]),'COMMA':([25,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,70,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,104,106,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,142,143,152,153,154,159,164,],[-100,-100,-22,-23,-24,-25,-26,-27,-28,-55,-57,-59,-100,-62,-64,-79,-98,-81,-83,-86,-100,-89,-100,-94,-97,104,-54,105,-33,105,104,-100,-100,-61,-65,-100,-66,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-95,-100,-100,-100,-100,-96,-100,-100,-42,145,-58,-60,-67,-78,-68,-69,-70,-71,-72,-73,-100,-76,-100,-77,-80,-82,-84,-85,-87,-88,-90,-91,-92,-93,104,-53,-32,-100,-74,-75,-41,-56,]),'L_PARENTHESIS':([32,59,],[68,101,]),'R_PARENTHESIS':([68,101,106,107,139,159,],[108,138,-42,144,156,-41,]),'INDENT':([110,],[151,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file':([0,],[1,]),'statements':([0,151,],[2,163,]),'statement':([0,2,151,163,],[3,29,3,29,]),'compound_stmt':([0,2,151,163,],[4,4,4,4,]),'simple_stmts':([0,2,71,100,103,146,151,155,157,158,162,163,166,170,],[5,5,111,111,111,111,5,111,111,111,111,5,111,111,]),'function_def':([0,2,151,163,],[6,6,6,6,]),'if_stmt':([0,2,151,163,],[7,7,7,7,]),'class_def':([0,2,151,163,],[8,8,8,8,]),'for_stmt':([0,2,151,163,],[9,9,9,9,]),'while_stmt':([0,2,151,163,],[10,10,10,10,]),'simple_stmt':([0,2,30,71,100,103,146,151,155,157,158,162,163,166,170,],[11,11,67,11,11,11,11,11,11,11,11,11,11,11,11,]),'assignment':([0,2,30,71,100,103,146,151,155,157,158,162,163,166,170,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'return_stmt':([0,2,30,71,100,103,146,151,155,157,158,162,163,166,170,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'del_stmt':([0,2,30,71,100,103,146,151,155,157,158,162,163,166,170,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'global_stmt':([0,2,30,71,100,103,146,151,155,157,158,162,163,166,170,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'augmentation_assignment':([13,],[33,]),'named_expression':([14,17,149,],[41,61,161,]),'expression':([14,17,25,33,102,104,149,152,],[42,42,63,63,63,142,42,164,]),'disjunction':([14,17,25,33,72,73,102,104,149,152,],[43,43,43,43,112,113,43,43,43,43,]),'conjunction':([14,17,25,33,72,73,102,104,149,152,],[44,44,44,44,44,44,44,44,44,44,]),'inversion':([14,17,25,33,46,72,73,74,102,104,149,152,],[45,45,45,45,75,45,45,114,45,45,45,45,]),'comparison':([14,17,25,33,46,72,73,74,102,104,149,152,],[47,47,47,47,47,47,47,47,47,47,47,47,]),'bitwise_or':([14,17,25,33,46,72,73,74,79,80,81,82,83,84,86,87,102,104,123,125,149,152,],[48,48,48,48,48,48,48,48,117,118,119,120,121,122,124,126,48,48,153,154,48,48,]),'bitwise_xor':([14,17,25,33,46,72,73,74,77,79,80,81,82,83,84,86,87,102,104,123,125,149,152,],[49,49,49,49,49,49,49,49,116,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'empty':([14,17,25,33,46,49,54,56,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,95,96,97,98,102,104,116,123,125,149,152,],[50,50,50,50,50,88,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,88,50,50,50,50,]),'bitwise_and':([14,17,25,33,46,72,73,74,77,79,80,81,82,83,84,86,87,88,102,104,123,125,149,152,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,127,51,51,51,51,51,51,]),'shift_expr':([14,17,25,33,46,72,73,74,77,79,80,81,82,83,84,86,87,88,89,102,104,123,125,149,152,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,128,52,52,52,52,52,52,]),'sum':([14,17,25,33,46,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,102,104,123,125,149,152,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,129,130,53,53,53,53,53,53,]),'term':([14,17,25,33,46,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,102,104,123,125,149,152,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,131,132,55,55,55,55,55,55,]),'factor':([14,17,25,33,46,54,56,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,95,96,97,98,102,104,123,125,149,152,],[57,57,57,57,57,94,99,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,133,134,135,136,57,57,57,57,57,57,]),'power':([14,17,25,33,46,54,56,72,73,74,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,95,96,97,98,102,104,123,125,149,152,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'expressions':([25,33,102,],[62,70,140,]),'namelist':([26,27,],[64,66,]),'compare_op_list':([48,],[76,]),'compare_op':([48,76,],[78,115,]),'parameters':([68,],[107,]),'block':([71,100,103,146,155,157,158,162,166,170,],[109,137,141,160,165,168,169,171,173,174,]),'arguments':([101,],[139,]),'elif_stmt':([109,174,],[147,175,]),'else_block':([109,157,174,],[148,167,176,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> statements ENDMARKER','file',2,'p_file','Parser.py',67),
  ('statements -> statements statement','statements',2,'p_statements','Parser.py',75),
  ('statements -> statement','statements',1,'p_statements','Parser.py',76),
  ('statement -> compound_stmt','statement',1,'p_statement','Parser.py',81),
  ('statement -> simple_stmts','statement',1,'p_statement','Parser.py',82),
  ('simple_stmts -> simple_stmts SEMICOLON simple_stmt','simple_stmts',3,'p_simple_stmts','Parser.py',90),
  ('simple_stmts -> simple_stmt NEWLINE','simple_stmts',2,'p_simple_stmts','Parser.py',91),
  ('simple_stmt -> assignment','simple_stmt',1,'p_simple_stmt','Parser.py',97),
  ('simple_stmt -> return_stmt','simple_stmt',1,'p_simple_stmt','Parser.py',98),
  ('simple_stmt -> PASS','simple_stmt',1,'p_simple_stmt','Parser.py',99),
  ('simple_stmt -> del_stmt','simple_stmt',1,'p_simple_stmt','Parser.py',100),
  ('simple_stmt -> BREAK','simple_stmt',1,'p_simple_stmt','Parser.py',101),
  ('simple_stmt -> CONTINUE','simple_stmt',1,'p_simple_stmt','Parser.py',102),
  ('simple_stmt -> global_stmt','simple_stmt',1,'p_simple_stmt','Parser.py',103),
  ('compound_stmt -> function_def','compound_stmt',1,'p_compound_stmt','Parser.py',108),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','Parser.py',109),
  ('compound_stmt -> class_def','compound_stmt',1,'p_compound_stmt','Parser.py',110),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','Parser.py',111),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','Parser.py',112),
  ('assignment -> IDENTIFIER augmentation_assignment expressions','assignment',3,'p_assignment','Parser.py',120),
  ('assignment -> IDENTIFIER augmentation_assignment IDENTIFIER','assignment',3,'p_assignment','Parser.py',121),
  ('augmentation_assignment -> SUM_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',127),
  ('augmentation_assignment -> SUBTRACTION_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',128),
  ('augmentation_assignment -> PRODUCT_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',129),
  ('augmentation_assignment -> DIVISION_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',130),
  ('augmentation_assignment -> MODULUS_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',131),
  ('augmentation_assignment -> EXPONENTIATION_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',132),
  ('augmentation_assignment -> INTEGER_DIVISION_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',133),
  ('return_stmt -> RETURN expressions','return_stmt',2,'p_return_stmt','Parser.py',140),
  ('global_stmt -> GLOBAL namelist','global_stmt',2,'p_global_stmt','Parser.py',144),
  ('del_stmt -> DEL namelist','del_stmt',2,'p_del_stmt','Parser.py',148),
  ('namelist -> namelist COMMA IDENTIFIER','namelist',3,'p_namelist','Parser.py',152),
  ('namelist -> IDENTIFIER','namelist',1,'p_namelist','Parser.py',153),
  ('block -> NEWLINE INDENT statements DEDENT','block',4,'p_block','Parser.py',163),
  ('block -> simple_stmts','block',1,'p_block','Parser.py',164),
  ('class_def -> CLASS IDENTIFIER COLON block','class_def',4,'p_class_def','Parser.py',172),
  ('class_def -> CLASS IDENTIFIER L_PARENTHESIS R_PARENTHESIS COLON block','class_def',6,'p_class_def','Parser.py',173),
  ('class_def -> CLASS IDENTIFIER L_PARENTHESIS arguments R_PARENTHESIS COLON block','class_def',7,'p_class_def','Parser.py',174),
  ('function_def -> DEF IDENTIFIER L_PARENTHESIS parameters R_PARENTHESIS COLON block','function_def',7,'p_function_def','Parser.py',178),
  ('function_def -> DEF IDENTIFIER L_PARENTHESIS R_PARENTHESIS COLON block','function_def',6,'p_function_def','Parser.py',179),
  ('parameters -> parameters COMMA IDENTIFIER','parameters',3,'p_parameters','Parser.py',191),
  ('parameters -> IDENTIFIER','parameters',1,'p_parameters','Parser.py',192),
  ('if_stmt -> IF named_expression COLON block elif_stmt','if_stmt',5,'p_if_stmt','Parser.py',198),
  ('if_stmt -> IF named_expression COLON block else_block','if_stmt',5,'p_if_stmt','Parser.py',199),
  ('if_stmt -> IF named_expression COLON block','if_stmt',4,'p_if_stmt','Parser.py',200),
  ('elif_stmt -> ELIF named_expression COLON block elif_stmt','elif_stmt',5,'p_elif_stmt','Parser.py',206),
  ('elif_stmt -> ELIF named_expression COLON block else_block','elif_stmt',5,'p_elif_stmt','Parser.py',207),
  ('elif_stmt -> ELIF named_expression COLON block','elif_stmt',4,'p_elif_stmt','Parser.py',208),
  ('else_block -> ELSE COLON block','else_block',3,'p_else_block','Parser.py',212),
  ('while_stmt -> WHILE named_expression COLON block','while_stmt',4,'p_while_stmt','Parser.py',218),
  ('for_stmt -> FOR IDENTIFIER IN expressions COLON else_block','for_stmt',6,'p_for_stmt','Parser.py',226),
  ('for_stmt -> FOR IDENTIFIER IN expressions COLON block','for_stmt',6,'p_for_stmt','Parser.py',227),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions','Parser.py',235),
  ('expressions -> expression','expressions',1,'p_expressions','Parser.py',236),
  ('expression -> disjunction','expression',1,'p_expression','Parser.py',240),
  ('expression -> disjunction IF disjunction ELSE expression','expression',5,'p_expression','Parser.py',241),
  ('disjunction -> conjunction','disjunction',1,'p_disjunction','Parser.py',246),
  ('disjunction -> conjunction OR disjunction','disjunction',3,'p_disjunction','Parser.py',247),
  ('conjunction -> inversion','conjunction',1,'p_conjunction','Parser.py',252),
  ('conjunction -> inversion AND inversion','conjunction',3,'p_conjunction','Parser.py',253),
  ('inversion -> NOT inversion','inversion',2,'p_inversion','Parser.py',257),
  ('inversion -> comparison','inversion',1,'p_inversion','Parser.py',258),
  ('named_expression -> expression','named_expression',1,'p_named_expression','Parser.py',263),
  ('comparison -> bitwise_or','comparison',1,'p_comparison','Parser.py',270),
  ('comparison -> bitwise_or compare_op_list','comparison',2,'p_comparison','Parser.py',271),
  ('compare_op_list -> compare_op','compare_op_list',1,'p_compare_op_list','Parser.py',275),
  ('compare_op_list -> compare_op_list compare_op','compare_op_list',2,'p_compare_op_list','Parser.py',276),
  ('compare_op -> EQUALITY bitwise_or','compare_op',2,'p_compare_op','Parser.py',281),
  ('compare_op -> INEQUALITY bitwise_or','compare_op',2,'p_compare_op','Parser.py',282),
  ('compare_op -> GREATER_EQUAL bitwise_or','compare_op',2,'p_compare_op','Parser.py',283),
  ('compare_op -> LESSER_EQUAL bitwise_or','compare_op',2,'p_compare_op','Parser.py',284),
  ('compare_op -> GREATER bitwise_or','compare_op',2,'p_compare_op','Parser.py',285),
  ('compare_op -> LESSER bitwise_or','compare_op',2,'p_compare_op','Parser.py',286),
  ('compare_op -> NOT IN bitwise_or','compare_op',3,'p_compare_op','Parser.py',287),
  ('compare_op -> IS NOT bitwise_or','compare_op',3,'p_compare_op','Parser.py',288),
  ('compare_op -> IN bitwise_or','compare_op',2,'p_compare_op','Parser.py',289),
  ('compare_op -> IS bitwise_or','compare_op',2,'p_compare_op','Parser.py',290),
  ('bitwise_or -> bitwise_or BITWISE_OR bitwise_xor','bitwise_or',3,'p_bitwise_or','Parser.py',297),
  ('bitwise_or -> bitwise_xor','bitwise_or',1,'p_bitwise_or','Parser.py',298),
  ('bitwise_xor -> bitwise_xor empty bitwise_and','bitwise_xor',3,'p_bitwise_xor','Parser.py',303),
  ('bitwise_xor -> bitwise_and','bitwise_xor',1,'p_bitwise_xor','Parser.py',304),
  ('bitwise_and -> bitwise_and BITWISE_AND shift_expr','bitwise_and',3,'p_bitwise_and','Parser.py',308),
  ('bitwise_and -> shift_expr','bitwise_and',1,'p_bitwise_and','Parser.py',309),
  ('shift_expr -> shift_expr L_SHIFT sum','shift_expr',3,'p_shift_expr','Parser.py',313),
  ('shift_expr -> shift_expr R_SHIFT sum','shift_expr',3,'p_shift_expr','Parser.py',314),
  ('shift_expr -> sum','shift_expr',1,'p_shift_expr','Parser.py',315),
  ('sum -> sum SUM term','sum',3,'p_sum','Parser.py',322),
  ('sum -> sum SUBTRACTION term','sum',3,'p_sum','Parser.py',323),
  ('sum -> term','sum',1,'p_sum','Parser.py',324),
  ('term -> term PRODUCT factor','term',3,'p_term','Parser.py',329),
  ('term -> term DIVISION factor','term',3,'p_term','Parser.py',330),
  ('term -> term INTEGER_DIVISION factor','term',3,'p_term','Parser.py',331),
  ('term -> term MODULUS factor','term',3,'p_term','Parser.py',332),
  ('term -> factor','term',1,'p_term','Parser.py',333),
  ('factor -> SUM factor','factor',2,'p_factor','Parser.py',338),
  ('factor -> SUBTRACTION factor','factor',2,'p_factor','Parser.py',339),
  ('factor -> power','factor',1,'p_factor','Parser.py',340),
  ('power -> empty','power',1,'p_power','Parser.py',345),
  ('arguments -> <empty>','arguments',0,'p_arguments','Parser.py',352),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',357),
]
