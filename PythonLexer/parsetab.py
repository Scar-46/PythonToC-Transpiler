
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'fileADDITION_ASSIGNMENT AMPERSAND AND AS ASSIGNMENT BIN_NUMBER BREAK CARET CLASS COLON COMMA CONTINUE DEDENT DEF DEL DIVISION_ASSIGNMENT DOT DOUBLE_SLASH DOUBLE_STAR ELIF ELSE ENDMARKER EQUALITY EXPONENTIATION_ASSIGNMENT FALSE FLOOR_DIVISION_ASSIGNMENT FOR F_NUMBER GLOBAL GREATER GREATER_EQUAL HEX_NUMBER IDENTIFIER IF IN INDENT INEQUALITY IS LESSER LESSER_EQUAL L_CB L_PARENTHESIS L_SHIFT L_SQB MINUS MODULO_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NEWLINE NONE NOT NUMBER OCT_NUMBER OR PASS PERCENT PIPE PLUS RETURN R_CB R_PARENTHESIS R_SHIFT R_SQB SEMICOLON SLASH STAR STRING SUBTRACTION_ASSIGNMENT TRIPLE_STRING TRUE WHILE WHITESPACEfile : statements ENDMARKER\n            | ENDMARKER\n    statements : statements statement\n                  | statement\n    statement : compound_stmt\n                 | simple_stmts\n    simple_stmts : simple_stmts SEMICOLON simple_stmt NEWLINE\n                    | simple_stmt NEWLINE\n    simple_stmt : assignment\n                   | expressions\n                   | return_stmt\n                   | PASS\n                   | del_stmt\n                   | BREAK \n                   | CONTINUE \n                   | global_stmt\n    compound_stmt : function_def\n                     | if_stmt\n                     | class_def\n                     | for_stmt\n                     | while_stmt\n    assignment : IDENTIFIER augmentation_assignment expressions\n    augmentation_assignment : ASSIGNMENT\n                               | ADDITION_ASSIGNMENT\n                               | SUBTRACTION_ASSIGNMENT\n                               | MULTIPLICATION_ASSIGNMENT\n                               | DIVISION_ASSIGNMENT\n                               | MODULO_ASSIGNMENT\n                               | EXPONENTIATION_ASSIGNMENT\n                               | FLOOR_DIVISION_ASSIGNMENT\n    return_stmt : RETURN expressions\n    global_stmt : GLOBAL namelist\n    del_stmt : DEL namelist\n    namelist : namelist COMMA IDENTIFIER\n                | IDENTIFIER\n    block : NEWLINE INDENT statements DEDENT\n             | simple_stmts\n    class_def : CLASS IDENTIFIER L_PARENTHESIS arguments R_PARENTHESIS COLON block  \n                 | CLASS IDENTIFIER L_PARENTHESIS R_PARENTHESIS COLON block\n                 | CLASS IDENTIFIER COLON block\n    function_def : DEF IDENTIFIER L_PARENTHESIS parameters R_PARENTHESIS COLON block\n                    | DEF IDENTIFIER L_PARENTHESIS R_PARENTHESIS COLON block\n    parameters : parameters COMMA IDENTIFIER\n                  | IDENTIFIER\n    if_stmt : IF expression COLON block elif_stmt\n               | IF expression COLON block else_block\n               | IF expression COLON block\n    elif_stmt : ELIF expression COLON block elif_stmt\n                 | ELIF expression COLON block else_block\n                 | ELIF expression COLON block\n    else_block : ELSE COLON block\n    while_stmt : WHILE expression COLON block else_block\n                  | WHILE expression COLON block\n    for_stmt : FOR targets IN expressions COLON else_block\n                | FOR targets IN expressions COLON block\n    expressions : expressions COMMA expression\n                   | expression\n    expression : disjunction IF disjunction ELSE expression\n                  | disjunction\n    disjunction : conjunction OR disjunction\n                   | conjunction \n    conjunction : inversion AND inversion\n                   | inversion\n    inversion : NOT inversion \n                 | comparison\n    comparison : bitwise_or compare_op_list\n                  | bitwise_or\n    compare_op_list : compare_op_list compare_op\n                       | compare_op \n    compare_op : EQUALITY bitwise_or \n                  | INEQUALITY bitwise_or \n                  | GREATER_EQUAL bitwise_or \n                  | LESSER_EQUAL bitwise_or \n                  | GREATER bitwise_or \n                  | LESSER bitwise_or \n                  | NOT IN bitwise_or \n                  | IS NOT bitwise_or \n                  | IN bitwise_or \n                  | IS bitwise_or \n    bitwise_or : bitwise_or PIPE bitwise_xor \n                  | bitwise_xor \n    bitwise_xor : bitwise_xor CARET bitwise_and \n                   | bitwise_and\n    bitwise_and : bitwise_and AMPERSAND shift_expr \n                   | shift_expr\n    shift_expr : shift_expr L_SHIFT sum\n                  | shift_expr R_SHIFT sum\n                  | sum\n    sum : sum PLUS term\n           | sum MINUS term\n           | term\n    term : term STAR factor \n            | term SLASH factor \n            | term DOUBLE_SLASH factor \n            | term PERCENT factor\n            | factor\n    factor : PLUS factor \n              | MINUS factor \n              | power\n    power : primary DOUBLE_STAR factor\n             | primary\n    primary : primary L_PARENTHESIS arguments R_PARENTHESIS\n               | primary L_PARENTHESIS R_PARENTHESIS\n               | primary L_SQB slices R_SQB\n               | primary DOT IDENTIFIER\n               | atomic\n    slices : slices COMMA slice\n              | slice\n    slice : expression COLON expression COLON expression\n             | expression COLON expression\n             | expression COLON\n             | COLON expression\n             | COLON COLON\n             | COLON\n             | expression\n    atomic : IDENTIFIER\n              | TRUE\n              | FALSE\n              | NONE\n              | strings\n              | number\n              | tuple\n              | list\n              | dict\n              | set\n    number : NUMBER\n              | F_NUMBER\n              | BIN_NUMBER\n              | HEX_NUMBER\n              | OCT_NUMBER\n    arguments : expressions\n    strings : STRING\n               | TRIPLE_STRING\n    list : L_SQB expressions R_SQB\n            | L_SQB R_SQB\n    tuple : L_PARENTHESIS expressions R_PARENTHESIS\n             | L_PARENTHESIS R_PARENTHESIS\n    set : L_CB expressions R_CB\n    dict : L_CB kvpairs R_CB\n            | L_CB R_CB\n    kvpairs : kvpairs COMMA kvpair\n               | kvpair\n    kvpair : expression COLON expression\n    targets : targets COMMA target \n               | target\n    target : empty\n    empty :'
    
_lr_action_items = {'ENDMARKER':([0,2,4,5,6,7,8,9,10,11,68,70,185,189,191,194,197,214,215,222,228,233,234,235,237,239,240,241,243,244,245,],[3,67,-4,-5,-6,-17,-18,-19,-20,-21,-3,-8,-7,-47,-37,-40,-53,-45,-46,-52,-42,-39,-54,-55,-41,-51,-36,-38,-50,-48,-49,]),'DEF':([0,2,4,5,6,7,8,9,10,11,68,70,185,189,191,194,197,214,215,218,222,228,231,233,234,235,237,239,240,241,243,244,245,],[13,13,-4,-5,-6,-17,-18,-19,-20,-21,-3,-8,-7,-47,-37,-40,-53,-45,-46,13,-52,-42,13,-39,-54,-55,-41,-51,-36,-38,-50,-48,-49,]),'IF':([0,2,4,5,6,7,8,9,10,11,14,32,33,34,36,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,70,82,83,98,99,101,117,122,128,130,137,147,148,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,185,189,191,194,197,200,201,202,203,214,215,218,222,228,231,233,234,235,237,239,240,241,243,244,245,],[16,16,-4,-5,-6,-17,-18,-19,-20,-21,-116,95,-61,-63,-65,-67,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-3,-8,-137,-116,-64,-66,-69,-97,-98,-135,-140,-136,-60,-62,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-7,-47,-37,-40,-53,-76,-77,-102,-104,-45,-46,16,-52,-42,16,-39,-54,-55,-41,-51,-36,-38,-50,-48,-49,]),'CLASS':([0,2,4,5,6,7,8,9,10,11,68,70,185,189,191,194,197,214,215,218,222,228,231,233,234,235,237,239,240,241,243,244,245,],[18,18,-4,-5,-6,-17,-18,-19,-20,-21,-3,-8,-7,-47,-37,-40,-53,-45,-46,18,-52,-42,18,-39,-54,-55,-41,-51,-36,-38,-50,-48,-49,]),'FOR':([0,2,4,5,6,7,8,9,10,11,68,70,185,189,191,194,197,214,215,218,222,228,231,233,234,235,237,239,240,241,243,244,245,],[19,19,-4,-5,-6,-17,-18,-19,-20,-21,-3,-8,-7,-47,-37,-40,-53,-45,-46,19,-52,-42,19,-39,-54,-55,-41,-51,-36,-38,-50,-48,-49,]),'WHILE':([0,2,4,5,6,7,8,9,10,11,68,70,185,189,191,194,197,214,215,218,222,228,231,233,234,235,237,239,240,241,243,244,245,],[21,21,-4,-5,-6,-17,-18,-19,-20,-21,-3,-8,-7,-47,-37,-40,-53,-45,-46,21,-52,-42,21,-39,-54,-55,-41,-51,-36,-38,-50,-48,-49,]),'PASS':([0,2,4,5,6,7,8,9,10,11,68,69,70,138,140,144,185,189,191,194,197,213,214,215,218,220,221,222,226,228,230,231,232,233,234,235,237,238,239,240,241,243,244,245,],[24,24,-4,-5,-6,-17,-18,-19,-20,-21,-3,24,-8,24,24,24,-7,-47,-37,-40,-53,24,-45,-46,24,24,24,-52,24,-42,24,24,24,-39,-54,-55,-41,24,-51,-36,-38,-50,-48,-49,]),'BREAK':([0,2,4,5,6,7,8,9,10,11,68,69,70,138,140,144,185,189,191,194,197,213,214,215,218,220,221,222,226,228,230,231,232,233,234,235,237,238,239,240,241,243,244,245,],[26,26,-4,-5,-6,-17,-18,-19,-20,-21,-3,26,-8,26,26,26,-7,-47,-37,-40,-53,26,-45,-46,26,26,26,-52,26,-42,26,26,26,-39,-54,-55,-41,26,-51,-36,-38,-50,-48,-49,]),'CONTINUE':([0,2,4,5,6,7,8,9,10,11,68,69,70,138,140,144,185,189,191,194,197,213,214,215,218,220,221,222,226,228,230,231,232,233,234,235,237,238,239,240,241,243,244,245,],[27,27,-4,-5,-6,-17,-18,-19,-20,-21,-3,27,-8,27,27,27,-7,-47,-37,-40,-53,27,-45,-46,27,27,27,-52,27,-42,27,27,27,-39,-54,-55,-41,27,-51,-36,-38,-50,-48,-49,]),'IDENTIFIER':([0,2,4,5,6,7,8,9,10,11,13,15,16,18,21,29,30,31,35,42,44,48,66,68,69,70,72,73,74,75,76,77,78,79,80,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,126,135,138,139,140,141,144,145,157,159,178,182,184,185,189,191,194,197,199,204,205,212,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[14,14,-4,-5,-6,-17,-18,-19,-20,-21,71,83,83,85,83,83,93,93,83,83,83,83,83,-3,14,-8,83,-23,-24,-25,-26,-27,-28,-29,-30,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,179,186,14,83,14,83,14,198,83,83,83,83,83,-7,-47,-37,-40,-53,83,83,83,227,14,-45,-46,83,14,14,14,-52,14,-42,14,14,14,-39,-54,-55,83,-41,14,-51,-36,-38,-50,-48,-49,]),'RETURN':([0,2,4,5,6,7,8,9,10,11,68,69,70,138,140,144,185,189,191,194,197,213,214,215,218,220,221,222,226,228,230,231,232,233,234,235,237,238,239,240,241,243,244,245,],[29,29,-4,-5,-6,-17,-18,-19,-20,-21,-3,29,-8,29,29,29,-7,-47,-37,-40,-53,29,-45,-46,29,29,29,-52,29,-42,29,29,29,-39,-54,-55,-41,29,-51,-36,-38,-50,-48,-49,]),'DEL':([0,2,4,5,6,7,8,9,10,11,68,69,70,138,140,144,185,189,191,194,197,213,214,215,218,220,221,222,226,228,230,231,232,233,234,235,237,238,239,240,241,243,244,245,],[30,30,-4,-5,-6,-17,-18,-19,-20,-21,-3,30,-8,30,30,30,-7,-47,-37,-40,-53,30,-45,-46,30,30,30,-52,30,-42,30,30,30,-39,-54,-55,-41,30,-51,-36,-38,-50,-48,-49,]),'GLOBAL':([0,2,4,5,6,7,8,9,10,11,68,69,70,138,140,144,185,189,191,194,197,213,214,215,218,220,221,222,226,228,230,231,232,233,234,235,237,238,239,240,241,243,244,245,],[31,31,-4,-5,-6,-17,-18,-19,-20,-21,-3,31,-8,31,31,31,-7,-47,-37,-40,-53,31,-45,-46,31,31,31,-52,31,-42,31,31,31,-39,-54,-55,-41,31,-51,-36,-38,-50,-48,-49,]),'NOT':([0,2,4,5,6,7,8,9,10,11,14,15,16,21,29,35,37,38,39,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,74,75,76,77,78,79,80,82,83,89,95,96,97,99,101,110,117,122,124,125,128,130,137,138,139,140,141,144,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,178,179,180,181,182,183,184,185,189,191,194,197,199,200,201,202,203,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[35,35,-4,-5,-6,-17,-18,-19,-20,-21,-116,35,35,35,35,35,108,-81,-83,-85,-88,-91,-96,-99,-101,35,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,35,-3,35,-8,35,-23,-24,-25,-26,-27,-28,-29,-30,-137,-116,35,35,35,35,108,-69,159,-97,-98,35,35,-135,-140,-136,35,35,35,35,35,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,35,-105,-134,-139,35,-138,35,-7,-47,-37,-40,-53,35,-76,-77,-102,-104,35,35,35,-45,-46,35,35,35,35,-52,35,-42,35,35,35,-39,-54,-55,35,-41,35,-51,-36,-38,-50,-48,-49,]),'PLUS':([0,2,4,5,6,7,8,9,10,11,14,15,16,21,29,35,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,74,75,76,77,78,79,80,82,83,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,128,130,137,138,139,140,141,144,157,159,163,164,165,166,167,168,169,170,171,173,178,179,180,181,182,183,184,185,189,191,194,197,199,202,203,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[42,42,-4,-5,-6,-17,-18,-19,-20,-21,-116,42,42,42,42,42,115,42,-91,42,-96,-99,-101,42,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,42,-3,42,-8,42,-23,-24,-25,-26,-27,-28,-29,-30,-137,-116,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-97,42,42,42,42,-98,42,42,42,-135,-140,-136,42,42,42,42,42,42,42,115,115,-89,-90,-92,-93,-94,-95,-100,-103,42,-105,-134,-139,42,-138,42,-7,-47,-37,-40,-53,42,-102,-104,42,42,42,-45,-46,42,42,42,42,-52,42,-42,42,42,42,-39,-54,-55,42,-41,42,-51,-36,-38,-50,-48,-49,]),'MINUS':([0,2,4,5,6,7,8,9,10,11,14,15,16,21,29,35,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,74,75,76,77,78,79,80,82,83,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,128,130,137,138,139,140,141,144,157,159,163,164,165,166,167,168,169,170,171,173,178,179,180,181,182,183,184,185,189,191,194,197,199,202,203,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[44,44,-4,-5,-6,-17,-18,-19,-20,-21,-116,44,44,44,44,44,116,44,-91,44,-96,-99,-101,44,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,44,-3,44,-8,44,-23,-24,-25,-26,-27,-28,-29,-30,-137,-116,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-97,44,44,44,44,-98,44,44,44,-135,-140,-136,44,44,44,44,44,44,44,116,116,-89,-90,-92,-93,-94,-95,-100,-103,44,-105,-134,-139,44,-138,44,-7,-47,-37,-40,-53,44,-102,-104,44,44,44,-45,-46,44,44,44,44,-52,44,-42,44,44,44,-39,-54,-55,44,-41,44,-51,-36,-38,-50,-48,-49,]),'TRUE':([0,2,4,5,6,7,8,9,10,11,15,16,21,29,35,42,44,48,66,68,69,70,72,73,74,75,76,77,78,79,80,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,185,189,191,194,197,199,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[50,50,-4,-5,-6,-17,-18,-19,-20,-21,50,50,50,50,50,50,50,50,50,-3,50,-8,50,-23,-24,-25,-26,-27,-28,-29,-30,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-7,-47,-37,-40,-53,50,50,50,50,-45,-46,50,50,50,50,-52,50,-42,50,50,50,-39,-54,-55,50,-41,50,-51,-36,-38,-50,-48,-49,]),'FALSE':([0,2,4,5,6,7,8,9,10,11,15,16,21,29,35,42,44,48,66,68,69,70,72,73,74,75,76,77,78,79,80,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,185,189,191,194,197,199,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[51,51,-4,-5,-6,-17,-18,-19,-20,-21,51,51,51,51,51,51,51,51,51,-3,51,-8,51,-23,-24,-25,-26,-27,-28,-29,-30,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-7,-47,-37,-40,-53,51,51,51,51,-45,-46,51,51,51,51,-52,51,-42,51,51,51,-39,-54,-55,51,-41,51,-51,-36,-38,-50,-48,-49,]),'NONE':([0,2,4,5,6,7,8,9,10,11,15,16,21,29,35,42,44,48,66,68,69,70,72,73,74,75,76,77,78,79,80,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,185,189,191,194,197,199,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[52,52,-4,-5,-6,-17,-18,-19,-20,-21,52,52,52,52,52,52,52,52,52,-3,52,-8,52,-23,-24,-25,-26,-27,-28,-29,-30,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-7,-47,-37,-40,-53,52,52,52,52,-45,-46,52,52,52,52,-52,52,-42,52,52,52,-39,-54,-55,52,-41,52,-51,-36,-38,-50,-48,-49,]),'STRING':([0,2,4,5,6,7,8,9,10,11,15,16,21,29,35,42,44,48,66,68,69,70,72,73,74,75,76,77,78,79,80,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,185,189,191,194,197,199,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[59,59,-4,-5,-6,-17,-18,-19,-20,-21,59,59,59,59,59,59,59,59,59,-3,59,-8,59,-23,-24,-25,-26,-27,-28,-29,-30,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-7,-47,-37,-40,-53,59,59,59,59,-45,-46,59,59,59,59,-52,59,-42,59,59,59,-39,-54,-55,59,-41,59,-51,-36,-38,-50,-48,-49,]),'TRIPLE_STRING':([0,2,4,5,6,7,8,9,10,11,15,16,21,29,35,42,44,48,66,68,69,70,72,73,74,75,76,77,78,79,80,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,185,189,191,194,197,199,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[60,60,-4,-5,-6,-17,-18,-19,-20,-21,60,60,60,60,60,60,60,60,60,-3,60,-8,60,-23,-24,-25,-26,-27,-28,-29,-30,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-7,-47,-37,-40,-53,60,60,60,60,-45,-46,60,60,60,60,-52,60,-42,60,60,60,-39,-54,-55,60,-41,60,-51,-36,-38,-50,-48,-49,]),'NUMBER':([0,2,4,5,6,7,8,9,10,11,15,16,21,29,35,42,44,48,66,68,69,70,72,73,74,75,76,77,78,79,80,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,185,189,191,194,197,199,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[61,61,-4,-5,-6,-17,-18,-19,-20,-21,61,61,61,61,61,61,61,61,61,-3,61,-8,61,-23,-24,-25,-26,-27,-28,-29,-30,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-7,-47,-37,-40,-53,61,61,61,61,-45,-46,61,61,61,61,-52,61,-42,61,61,61,-39,-54,-55,61,-41,61,-51,-36,-38,-50,-48,-49,]),'F_NUMBER':([0,2,4,5,6,7,8,9,10,11,15,16,21,29,35,42,44,48,66,68,69,70,72,73,74,75,76,77,78,79,80,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,185,189,191,194,197,199,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[62,62,-4,-5,-6,-17,-18,-19,-20,-21,62,62,62,62,62,62,62,62,62,-3,62,-8,62,-23,-24,-25,-26,-27,-28,-29,-30,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-7,-47,-37,-40,-53,62,62,62,62,-45,-46,62,62,62,62,-52,62,-42,62,62,62,-39,-54,-55,62,-41,62,-51,-36,-38,-50,-48,-49,]),'BIN_NUMBER':([0,2,4,5,6,7,8,9,10,11,15,16,21,29,35,42,44,48,66,68,69,70,72,73,74,75,76,77,78,79,80,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,185,189,191,194,197,199,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[63,63,-4,-5,-6,-17,-18,-19,-20,-21,63,63,63,63,63,63,63,63,63,-3,63,-8,63,-23,-24,-25,-26,-27,-28,-29,-30,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-7,-47,-37,-40,-53,63,63,63,63,-45,-46,63,63,63,63,-52,63,-42,63,63,63,-39,-54,-55,63,-41,63,-51,-36,-38,-50,-48,-49,]),'HEX_NUMBER':([0,2,4,5,6,7,8,9,10,11,15,16,21,29,35,42,44,48,66,68,69,70,72,73,74,75,76,77,78,79,80,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,185,189,191,194,197,199,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[64,64,-4,-5,-6,-17,-18,-19,-20,-21,64,64,64,64,64,64,64,64,64,-3,64,-8,64,-23,-24,-25,-26,-27,-28,-29,-30,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-7,-47,-37,-40,-53,64,64,64,64,-45,-46,64,64,64,64,-52,64,-42,64,64,64,-39,-54,-55,64,-41,64,-51,-36,-38,-50,-48,-49,]),'OCT_NUMBER':([0,2,4,5,6,7,8,9,10,11,15,16,21,29,35,42,44,48,66,68,69,70,72,73,74,75,76,77,78,79,80,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,185,189,191,194,197,199,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[65,65,-4,-5,-6,-17,-18,-19,-20,-21,65,65,65,65,65,65,65,65,65,-3,65,-8,65,-23,-24,-25,-26,-27,-28,-29,-30,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-7,-47,-37,-40,-53,65,65,65,65,-45,-46,65,65,65,65,-52,65,-42,65,65,65,-39,-54,-55,65,-41,65,-51,-36,-38,-50,-48,-49,]),'L_PARENTHESIS':([0,2,4,5,6,7,8,9,10,11,14,15,16,21,29,35,42,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,85,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,128,130,137,138,139,140,141,144,157,159,173,178,179,180,181,182,183,184,185,189,191,194,197,199,202,203,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[15,15,-4,-5,-6,-17,-18,-19,-20,-21,-116,15,15,15,15,15,15,15,124,15,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,15,-3,15,-8,135,15,-23,-24,-25,-26,-27,-28,-29,-30,-137,-116,139,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-135,-140,-136,15,15,15,15,15,15,15,-103,15,-105,-134,-139,15,-138,15,-7,-47,-37,-40,-53,15,-102,-104,15,15,15,-45,-46,15,15,15,15,-52,15,-42,15,15,15,-39,-54,-55,15,-41,15,-51,-36,-38,-50,-48,-49,]),'L_SQB':([0,2,4,5,6,7,8,9,10,11,14,15,16,21,29,35,42,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,74,75,76,77,78,79,80,82,83,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,128,130,137,138,139,140,141,144,157,159,173,178,179,180,181,182,183,184,185,189,191,194,197,199,202,203,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[48,48,-4,-5,-6,-17,-18,-19,-20,-21,-116,48,48,48,48,48,48,48,125,48,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,48,-3,48,-8,48,-23,-24,-25,-26,-27,-28,-29,-30,-137,-116,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-135,-140,-136,48,48,48,48,48,48,48,-103,48,-105,-134,-139,48,-138,48,-7,-47,-37,-40,-53,48,-102,-104,48,48,48,-45,-46,48,48,48,48,-52,48,-42,48,48,48,-39,-54,-55,48,-41,48,-51,-36,-38,-50,-48,-49,]),'L_CB':([0,2,4,5,6,7,8,9,10,11,15,16,21,29,35,42,44,48,66,68,69,70,72,73,74,75,76,77,78,79,80,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,185,189,191,194,197,199,204,205,213,214,215,216,218,220,221,222,226,228,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,],[66,66,-4,-5,-6,-17,-18,-19,-20,-21,66,66,66,66,66,66,66,66,66,-3,66,-8,66,-23,-24,-25,-26,-27,-28,-29,-30,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-7,-47,-37,-40,-53,66,66,66,66,-45,-46,66,66,66,66,-52,66,-42,66,66,66,-39,-54,-55,66,-41,66,-51,-36,-38,-50,-48,-49,]),'$end':([1,3,67,],[0,-2,-1,]),'DEDENT':([4,5,6,7,8,9,10,11,68,70,185,189,191,194,197,214,215,222,228,231,233,234,235,237,239,240,241,243,244,245,],[-4,-5,-6,-17,-18,-19,-20,-21,-3,-8,-7,-47,-37,-40,-53,-45,-46,-52,-42,240,-39,-54,-55,-41,-51,-36,-38,-50,-48,-49,]),'SEMICOLON':([6,70,185,191,],[69,-8,-7,69,]),'NEWLINE':([12,14,17,20,22,23,24,25,26,27,28,32,33,34,36,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,91,92,93,94,98,99,101,117,122,128,130,134,136,137,138,140,143,144,147,148,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,198,200,201,202,203,213,220,221,223,226,230,232,238,],[70,-116,-57,-10,-9,-11,-12,-13,-14,-15,-16,-59,-61,-63,-65,-67,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-31,-33,-35,-32,-64,-66,-69,-97,-98,-135,-140,185,-22,-136,190,190,-56,190,-60,-62,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-34,-76,-77,-102,-104,190,190,190,-58,190,190,190,190,]),'DOUBLE_STAR':([14,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,128,130,137,173,179,180,181,183,202,203,],[-116,123,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-135,-140,-136,-103,-105,-134,-139,-138,-102,-104,]),'DOT':([14,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,128,130,137,173,179,180,181,183,202,203,],[-116,126,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-135,-140,-136,-103,-105,-134,-139,-138,-102,-104,]),'STAR':([14,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,117,122,128,130,137,165,166,167,168,169,170,171,173,179,180,181,183,202,203,],[-116,118,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-97,-98,-135,-140,-136,118,118,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-102,-104,]),'SLASH':([14,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,117,122,128,130,137,165,166,167,168,169,170,171,173,179,180,181,183,202,203,],[-116,119,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-97,-98,-135,-140,-136,119,119,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-102,-104,]),'DOUBLE_SLASH':([14,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,117,122,128,130,137,165,166,167,168,169,170,171,173,179,180,181,183,202,203,],[-116,120,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-97,-98,-135,-140,-136,120,120,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-102,-104,]),'PERCENT':([14,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,117,122,128,130,137,165,166,167,168,169,170,171,173,179,180,181,183,202,203,],[-116,121,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-97,-98,-135,-140,-136,121,121,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-102,-104,]),'L_SHIFT':([14,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,117,122,128,130,137,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,202,203,],[-116,113,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-97,-98,-135,-140,-136,113,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-102,-104,]),'R_SHIFT':([14,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,117,122,128,130,137,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,202,203,],[-116,114,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-97,-98,-135,-140,-136,114,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-102,-104,]),'AMPERSAND':([14,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,117,122,128,130,137,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,202,203,],[-116,112,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-97,-98,-135,-140,-136,112,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-102,-104,]),'CARET':([14,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,117,122,128,130,137,150,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,202,203,],[-116,111,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-97,-98,-135,-140,-136,111,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-102,-104,]),'PIPE':([14,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,117,122,128,130,137,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,200,201,202,203,],[-116,100,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-97,-98,-135,-140,-136,-80,100,100,100,100,100,100,100,100,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,100,100,-102,-104,]),'EQUALITY':([14,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,99,101,117,122,128,130,137,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,200,201,202,203,],[-116,102,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,102,-69,-97,-98,-135,-140,-136,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-76,-77,-102,-104,]),'INEQUALITY':([14,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,99,101,117,122,128,130,137,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,200,201,202,203,],[-116,103,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,103,-69,-97,-98,-135,-140,-136,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-76,-77,-102,-104,]),'GREATER_EQUAL':([14,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,99,101,117,122,128,130,137,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,200,201,202,203,],[-116,104,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,104,-69,-97,-98,-135,-140,-136,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-76,-77,-102,-104,]),'LESSER_EQUAL':([14,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,99,101,117,122,128,130,137,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,200,201,202,203,],[-116,105,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,105,-69,-97,-98,-135,-140,-136,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-76,-77,-102,-104,]),'GREATER':([14,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,99,101,117,122,128,130,137,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,200,201,202,203,],[-116,106,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,106,-69,-97,-98,-135,-140,-136,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-76,-77,-102,-104,]),'LESSER':([14,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,99,101,117,122,128,130,137,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,200,201,202,203,],[-116,107,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,107,-69,-97,-98,-135,-140,-136,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-76,-77,-102,-104,]),'IS':([14,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,99,101,117,122,128,130,137,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,200,201,202,203,],[-116,110,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,110,-69,-97,-98,-135,-140,-136,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-76,-77,-102,-104,]),'IN':([14,19,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,86,87,88,99,101,108,117,122,128,130,137,142,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,196,200,201,202,203,],[-116,-147,109,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,141,-145,-146,109,-69,157,-97,-98,-135,-140,-136,-147,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-144,-76,-77,-102,-104,]),'AND':([14,34,36,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,98,99,101,117,122,128,130,137,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,200,201,202,203,],[-116,97,-65,-67,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-64,-66,-69,-97,-98,-135,-140,-136,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-76,-77,-102,-104,]),'OR':([14,33,34,36,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,98,99,101,117,122,128,130,137,148,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,200,201,202,203,],[-116,96,-63,-65,-67,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-64,-66,-69,-97,-98,-135,-140,-136,-62,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-76,-77,-102,-104,]),'COMMA':([14,17,19,20,32,33,34,36,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,81,82,83,86,87,88,91,92,93,94,98,99,101,117,122,127,128,129,130,131,132,133,136,137,142,143,147,148,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,183,186,187,195,196,198,200,201,202,203,205,206,207,208,210,223,224,225,227,242,],[-116,-57,-147,89,-59,-61,-63,-65,-67,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,89,-137,-116,142,-145,-146,89,145,-35,145,-64,-66,-69,-97,-98,89,-135,182,-140,89,-142,-57,89,-136,-147,-56,-60,-62,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,89,204,-108,-115,-114,-105,-134,-139,-138,-44,212,89,-144,-34,-76,-77,-102,-104,-111,-113,-112,-141,-143,-58,-107,-110,-43,-109,]),'ASSIGNMENT':([14,],[73,]),'ADDITION_ASSIGNMENT':([14,],[74,]),'SUBTRACTION_ASSIGNMENT':([14,],[75,]),'MULTIPLICATION_ASSIGNMENT':([14,],[76,]),'DIVISION_ASSIGNMENT':([14,],[77,]),'MODULO_ASSIGNMENT':([14,],[78,]),'EXPONENTIATION_ASSIGNMENT':([14,],[79,]),'FLOOR_DIVISION_ASSIGNMENT':([14,],[80,]),'R_PARENTHESIS':([15,17,32,33,34,36,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,81,82,83,98,99,101,117,122,124,128,130,135,137,139,143,147,148,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,179,180,181,183,186,187,192,200,201,202,203,223,227,],[82,-57,-59,-61,-63,-65,-67,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,137,-137,-116,-64,-66,-69,-97,-98,173,-135,-140,188,-136,193,-56,-60,-62,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,202,-103,-131,-105,-134,-139,-138,-44,211,219,-76,-77,-102,-104,-58,-43,]),'R_SQB':([17,32,33,34,36,37,38,39,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,98,99,101,117,122,127,128,130,137,143,147,148,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,175,176,177,178,179,180,181,183,200,201,202,203,205,206,207,223,224,225,242,],[-57,-59,-61,-63,-65,-67,-81,-83,-85,-88,-91,-96,-99,-101,128,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,-64,-66,-69,-97,-98,180,-135,-140,-136,-56,-60,-62,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,203,-108,-115,-114,-105,-134,-139,-138,-76,-77,-102,-104,-111,-113,-112,-58,-107,-110,-109,]),'COLON':([17,32,33,34,36,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,82,83,84,85,90,98,99,101,117,122,125,128,130,133,137,143,147,148,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,177,178,179,180,181,183,188,193,195,200,201,202,203,204,209,211,217,219,223,225,229,],[-57,-59,-61,-63,-65,-67,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-137,-116,138,140,144,-64,-66,-69,-97,-98,178,-135,-140,184,-136,-56,-60,-62,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,205,206,-105,-134,-139,-138,213,220,221,-76,-77,-102,-104,178,184,226,230,232,-58,236,238,]),'R_CB':([32,33,34,36,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,82,83,98,99,101,117,122,128,129,130,131,132,133,137,143,147,148,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,200,201,202,203,208,210,223,],[-59,-61,-63,-65,-67,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,130,-137,-116,-64,-66,-69,-97,-98,-135,181,-140,183,-142,-57,-136,-56,-60,-62,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-76,-77,-102,-104,-141,-143,-58,]),'ELSE':([33,34,36,37,38,39,40,41,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,82,83,98,99,101,117,122,128,130,137,146,147,148,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,179,180,181,183,185,189,191,197,200,201,202,203,221,240,243,],[-61,-63,-65,-67,-81,-83,-85,-88,-91,-96,-99,-101,-106,-117,-118,-119,-120,-121,-122,-123,-124,-125,-132,-133,-126,-127,-128,-129,-130,-8,-137,-116,-64,-66,-69,-97,-98,-135,-140,-136,199,-60,-62,-68,-80,-70,-71,-72,-73,-74,-75,-78,-79,-82,-84,-86,-87,-89,-90,-92,-93,-94,-95,-100,-103,-105,-134,-139,-138,-7,217,-37,217,-76,-77,-102,-104,217,-36,217,]),'ELIF':([70,185,189,191,240,243,],[-8,-7,216,-37,-36,216,]),'INDENT':([190,],[218,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file':([0,],[1,]),'statements':([0,218,],[2,231,]),'statement':([0,2,218,231,],[4,68,4,68,]),'compound_stmt':([0,2,218,231,],[5,5,5,5,]),'simple_stmts':([0,2,138,140,144,213,218,220,221,226,230,231,232,238,],[6,6,191,191,191,191,6,191,191,191,191,6,191,191,]),'function_def':([0,2,218,231,],[7,7,7,7,]),'if_stmt':([0,2,218,231,],[8,8,8,8,]),'class_def':([0,2,218,231,],[9,9,9,9,]),'for_stmt':([0,2,218,231,],[10,10,10,10,]),'while_stmt':([0,2,218,231,],[11,11,11,11,]),'simple_stmt':([0,2,69,138,140,144,213,218,220,221,226,230,231,232,238,],[12,12,134,12,12,12,12,12,12,12,12,12,12,12,12,]),'expression':([0,2,15,16,21,29,48,66,69,72,89,124,125,138,139,140,141,144,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[17,17,17,84,90,17,17,133,17,17,143,17,177,17,17,17,17,17,207,209,210,223,177,225,17,229,17,17,17,17,17,17,17,242,17,]),'expressions':([0,2,15,29,48,66,69,72,124,138,139,140,141,144,213,218,220,221,226,230,231,232,238,],[20,20,81,91,127,131,20,136,174,20,174,20,195,20,20,20,20,20,20,20,20,20,20,]),'assignment':([0,2,69,138,140,144,213,218,220,221,226,230,231,232,238,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'return_stmt':([0,2,69,138,140,144,213,218,220,221,226,230,231,232,238,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'del_stmt':([0,2,69,138,140,144,213,218,220,221,226,230,231,232,238,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'global_stmt':([0,2,69,138,140,144,213,218,220,221,226,230,231,232,238,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'disjunction':([0,2,15,16,21,29,48,66,69,72,89,95,96,124,125,138,139,140,141,144,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[32,32,32,32,32,32,32,32,32,32,32,146,147,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'conjunction':([0,2,15,16,21,29,48,66,69,72,89,95,96,124,125,138,139,140,141,144,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'inversion':([0,2,15,16,21,29,35,48,66,69,72,89,95,96,97,124,125,138,139,140,141,144,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[34,34,34,34,34,34,98,34,34,34,34,34,34,34,148,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'comparison':([0,2,15,16,21,29,35,48,66,69,72,89,95,96,97,124,125,138,139,140,141,144,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'bitwise_or':([0,2,15,16,21,29,35,48,66,69,72,89,95,96,97,102,103,104,105,106,107,109,110,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,151,152,153,154,155,156,158,160,37,37,37,37,37,37,37,200,201,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'bitwise_xor':([0,2,15,16,21,29,35,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,150,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'bitwise_and':([0,2,15,16,21,29,35,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,161,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'shift_expr':([0,2,15,16,21,29,35,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,162,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'sum':([0,2,15,16,21,29,35,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,163,164,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'term':([0,2,15,16,21,29,35,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,165,166,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'factor':([0,2,15,16,21,29,35,42,44,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[45,45,45,45,45,45,45,117,122,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,167,168,169,170,171,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'power':([0,2,15,16,21,29,35,42,44,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'primary':([0,2,15,16,21,29,35,42,44,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'atomic':([0,2,15,16,21,29,35,42,44,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'strings':([0,2,15,16,21,29,35,42,44,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'number':([0,2,15,16,21,29,35,42,44,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'tuple':([0,2,15,16,21,29,35,42,44,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'list':([0,2,15,16,21,29,35,42,44,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'dict':([0,2,15,16,21,29,35,42,44,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'set':([0,2,15,16,21,29,35,42,44,48,66,69,72,89,95,96,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,118,119,120,121,123,124,125,138,139,140,141,144,157,159,178,182,184,199,204,205,213,216,218,220,221,226,230,231,232,236,238,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'augmentation_assignment':([14,],[72,]),'targets':([19,],[86,]),'target':([19,142,],[87,196,]),'empty':([19,142,],[88,88,]),'namelist':([30,31,],[92,94,]),'compare_op_list':([37,],[99,]),'compare_op':([37,99,],[101,149,]),'kvpairs':([66,],[129,]),'kvpair':([66,182,],[132,208,]),'arguments':([124,139,],[172,192,]),'slices':([125,],[175,]),'slice':([125,204,],[176,224,]),'parameters':([135,],[187,]),'block':([138,140,144,213,220,221,226,230,232,238,],[189,194,197,228,233,235,237,239,241,243,]),'elif_stmt':([189,243,],[214,244,]),'else_block':([189,197,221,243,],[215,222,234,245,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> statements ENDMARKER','file',2,'p_file','Parser.py',72),
  ('file -> ENDMARKER','file',1,'p_file','Parser.py',73),
  ('statements -> statements statement','statements',2,'p_statements','Parser.py',81),
  ('statements -> statement','statements',1,'p_statements','Parser.py',82),
  ('statement -> compound_stmt','statement',1,'p_statement','Parser.py',87),
  ('statement -> simple_stmts','statement',1,'p_statement','Parser.py',88),
  ('simple_stmts -> simple_stmts SEMICOLON simple_stmt NEWLINE','simple_stmts',4,'p_simple_stmts','Parser.py',96),
  ('simple_stmts -> simple_stmt NEWLINE','simple_stmts',2,'p_simple_stmts','Parser.py',97),
  ('simple_stmt -> assignment','simple_stmt',1,'p_simple_stmt','Parser.py',103),
  ('simple_stmt -> expressions','simple_stmt',1,'p_simple_stmt','Parser.py',104),
  ('simple_stmt -> return_stmt','simple_stmt',1,'p_simple_stmt','Parser.py',105),
  ('simple_stmt -> PASS','simple_stmt',1,'p_simple_stmt','Parser.py',106),
  ('simple_stmt -> del_stmt','simple_stmt',1,'p_simple_stmt','Parser.py',107),
  ('simple_stmt -> BREAK','simple_stmt',1,'p_simple_stmt','Parser.py',108),
  ('simple_stmt -> CONTINUE','simple_stmt',1,'p_simple_stmt','Parser.py',109),
  ('simple_stmt -> global_stmt','simple_stmt',1,'p_simple_stmt','Parser.py',110),
  ('compound_stmt -> function_def','compound_stmt',1,'p_compound_stmt','Parser.py',114),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','Parser.py',115),
  ('compound_stmt -> class_def','compound_stmt',1,'p_compound_stmt','Parser.py',116),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','Parser.py',117),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','Parser.py',118),
  ('assignment -> IDENTIFIER augmentation_assignment expressions','assignment',3,'p_assignment','Parser.py',126),
  ('augmentation_assignment -> ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',131),
  ('augmentation_assignment -> ADDITION_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',132),
  ('augmentation_assignment -> SUBTRACTION_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',133),
  ('augmentation_assignment -> MULTIPLICATION_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',134),
  ('augmentation_assignment -> DIVISION_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',135),
  ('augmentation_assignment -> MODULO_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',136),
  ('augmentation_assignment -> EXPONENTIATION_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',137),
  ('augmentation_assignment -> FLOOR_DIVISION_ASSIGNMENT','augmentation_assignment',1,'p_augmentation_assignment','Parser.py',138),
  ('return_stmt -> RETURN expressions','return_stmt',2,'p_return_stmt','Parser.py',144),
  ('global_stmt -> GLOBAL namelist','global_stmt',2,'p_global_stmt','Parser.py',148),
  ('del_stmt -> DEL namelist','del_stmt',2,'p_del_stmt','Parser.py',152),
  ('namelist -> namelist COMMA IDENTIFIER','namelist',3,'p_namelist','Parser.py',156),
  ('namelist -> IDENTIFIER','namelist',1,'p_namelist','Parser.py',157),
  ('block -> NEWLINE INDENT statements DEDENT','block',4,'p_block','Parser.py',167),
  ('block -> simple_stmts','block',1,'p_block','Parser.py',168),
  ('class_def -> CLASS IDENTIFIER L_PARENTHESIS arguments R_PARENTHESIS COLON block','class_def',7,'p_class_def','Parser.py',174),
  ('class_def -> CLASS IDENTIFIER L_PARENTHESIS R_PARENTHESIS COLON block','class_def',6,'p_class_def','Parser.py',175),
  ('class_def -> CLASS IDENTIFIER COLON block','class_def',4,'p_class_def','Parser.py',176),
  ('function_def -> DEF IDENTIFIER L_PARENTHESIS parameters R_PARENTHESIS COLON block','function_def',7,'p_function_def','Parser.py',180),
  ('function_def -> DEF IDENTIFIER L_PARENTHESIS R_PARENTHESIS COLON block','function_def',6,'p_function_def','Parser.py',181),
  ('parameters -> parameters COMMA IDENTIFIER','parameters',3,'p_parameters','Parser.py',193),
  ('parameters -> IDENTIFIER','parameters',1,'p_parameters','Parser.py',194),
  ('if_stmt -> IF expression COLON block elif_stmt','if_stmt',5,'p_if_stmt','Parser.py',199),
  ('if_stmt -> IF expression COLON block else_block','if_stmt',5,'p_if_stmt','Parser.py',200),
  ('if_stmt -> IF expression COLON block','if_stmt',4,'p_if_stmt','Parser.py',201),
  ('elif_stmt -> ELIF expression COLON block elif_stmt','elif_stmt',5,'p_elif_stmt','Parser.py',207),
  ('elif_stmt -> ELIF expression COLON block else_block','elif_stmt',5,'p_elif_stmt','Parser.py',208),
  ('elif_stmt -> ELIF expression COLON block','elif_stmt',4,'p_elif_stmt','Parser.py',209),
  ('else_block -> ELSE COLON block','else_block',3,'p_else_block','Parser.py',213),
  ('while_stmt -> WHILE expression COLON block else_block','while_stmt',5,'p_while_stmt','Parser.py',219),
  ('while_stmt -> WHILE expression COLON block','while_stmt',4,'p_while_stmt','Parser.py',220),
  ('for_stmt -> FOR targets IN expressions COLON else_block','for_stmt',6,'p_for_stmt','Parser.py',227),
  ('for_stmt -> FOR targets IN expressions COLON block','for_stmt',6,'p_for_stmt','Parser.py',228),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions','Parser.py',234),
  ('expressions -> expression','expressions',1,'p_expressions','Parser.py',235),
  ('expression -> disjunction IF disjunction ELSE expression','expression',5,'p_expression','Parser.py',239),
  ('expression -> disjunction','expression',1,'p_expression','Parser.py',240),
  ('disjunction -> conjunction OR disjunction','disjunction',3,'p_disjunction','Parser.py',244),
  ('disjunction -> conjunction','disjunction',1,'p_disjunction','Parser.py',245),
  ('conjunction -> inversion AND inversion','conjunction',3,'p_conjunction','Parser.py',249),
  ('conjunction -> inversion','conjunction',1,'p_conjunction','Parser.py',250),
  ('inversion -> NOT inversion','inversion',2,'p_inversion','Parser.py',254),
  ('inversion -> comparison','inversion',1,'p_inversion','Parser.py',255),
  ('comparison -> bitwise_or compare_op_list','comparison',2,'p_comparison','Parser.py',262),
  ('comparison -> bitwise_or','comparison',1,'p_comparison','Parser.py',263),
  ('compare_op_list -> compare_op_list compare_op','compare_op_list',2,'p_compare_op_list','Parser.py',267),
  ('compare_op_list -> compare_op','compare_op_list',1,'p_compare_op_list','Parser.py',268),
  ('compare_op -> EQUALITY bitwise_or','compare_op',2,'p_compare_op','Parser.py',273),
  ('compare_op -> INEQUALITY bitwise_or','compare_op',2,'p_compare_op','Parser.py',274),
  ('compare_op -> GREATER_EQUAL bitwise_or','compare_op',2,'p_compare_op','Parser.py',275),
  ('compare_op -> LESSER_EQUAL bitwise_or','compare_op',2,'p_compare_op','Parser.py',276),
  ('compare_op -> GREATER bitwise_or','compare_op',2,'p_compare_op','Parser.py',277),
  ('compare_op -> LESSER bitwise_or','compare_op',2,'p_compare_op','Parser.py',278),
  ('compare_op -> NOT IN bitwise_or','compare_op',3,'p_compare_op','Parser.py',279),
  ('compare_op -> IS NOT bitwise_or','compare_op',3,'p_compare_op','Parser.py',280),
  ('compare_op -> IN bitwise_or','compare_op',2,'p_compare_op','Parser.py',281),
  ('compare_op -> IS bitwise_or','compare_op',2,'p_compare_op','Parser.py',282),
  ('bitwise_or -> bitwise_or PIPE bitwise_xor','bitwise_or',3,'p_bitwise_or','Parser.py',289),
  ('bitwise_or -> bitwise_xor','bitwise_or',1,'p_bitwise_or','Parser.py',290),
  ('bitwise_xor -> bitwise_xor CARET bitwise_and','bitwise_xor',3,'p_bitwise_xor','Parser.py',295),
  ('bitwise_xor -> bitwise_and','bitwise_xor',1,'p_bitwise_xor','Parser.py',296),
  ('bitwise_and -> bitwise_and AMPERSAND shift_expr','bitwise_and',3,'p_bitwise_and','Parser.py',300),
  ('bitwise_and -> shift_expr','bitwise_and',1,'p_bitwise_and','Parser.py',301),
  ('shift_expr -> shift_expr L_SHIFT sum','shift_expr',3,'p_shift_expr','Parser.py',305),
  ('shift_expr -> shift_expr R_SHIFT sum','shift_expr',3,'p_shift_expr','Parser.py',306),
  ('shift_expr -> sum','shift_expr',1,'p_shift_expr','Parser.py',307),
  ('sum -> sum PLUS term','sum',3,'p_sum','Parser.py',313),
  ('sum -> sum MINUS term','sum',3,'p_sum','Parser.py',314),
  ('sum -> term','sum',1,'p_sum','Parser.py',315),
  ('term -> term STAR factor','term',3,'p_term','Parser.py',319),
  ('term -> term SLASH factor','term',3,'p_term','Parser.py',320),
  ('term -> term DOUBLE_SLASH factor','term',3,'p_term','Parser.py',321),
  ('term -> term PERCENT factor','term',3,'p_term','Parser.py',322),
  ('term -> factor','term',1,'p_term','Parser.py',323),
  ('factor -> PLUS factor','factor',2,'p_factor','Parser.py',327),
  ('factor -> MINUS factor','factor',2,'p_factor','Parser.py',328),
  ('factor -> power','factor',1,'p_factor','Parser.py',329),
  ('power -> primary DOUBLE_STAR factor','power',3,'p_power','Parser.py',333),
  ('power -> primary','power',1,'p_power','Parser.py',334),
  ('primary -> primary L_PARENTHESIS arguments R_PARENTHESIS','primary',4,'p_primary','Parser.py',347),
  ('primary -> primary L_PARENTHESIS R_PARENTHESIS','primary',3,'p_primary','Parser.py',348),
  ('primary -> primary L_SQB slices R_SQB','primary',4,'p_primary','Parser.py',349),
  ('primary -> primary DOT IDENTIFIER','primary',3,'p_primary','Parser.py',350),
  ('primary -> atomic','primary',1,'p_primary','Parser.py',351),
  ('slices -> slices COMMA slice','slices',3,'p_slices','Parser.py',358),
  ('slices -> slice','slices',1,'p_slices','Parser.py',359),
  ('slice -> expression COLON expression COLON expression','slice',5,'p_slice','Parser.py',367),
  ('slice -> expression COLON expression','slice',3,'p_slice','Parser.py',368),
  ('slice -> expression COLON','slice',2,'p_slice','Parser.py',369),
  ('slice -> COLON expression','slice',2,'p_slice','Parser.py',370),
  ('slice -> COLON COLON','slice',2,'p_slice','Parser.py',371),
  ('slice -> COLON','slice',1,'p_slice','Parser.py',372),
  ('slice -> expression','slice',1,'p_slice','Parser.py',373),
  ('atomic -> IDENTIFIER','atomic',1,'p_atomic','Parser.py',380),
  ('atomic -> TRUE','atomic',1,'p_atomic','Parser.py',381),
  ('atomic -> FALSE','atomic',1,'p_atomic','Parser.py',382),
  ('atomic -> NONE','atomic',1,'p_atomic','Parser.py',383),
  ('atomic -> strings','atomic',1,'p_atomic','Parser.py',384),
  ('atomic -> number','atomic',1,'p_atomic','Parser.py',385),
  ('atomic -> tuple','atomic',1,'p_atomic','Parser.py',386),
  ('atomic -> list','atomic',1,'p_atomic','Parser.py',387),
  ('atomic -> dict','atomic',1,'p_atomic','Parser.py',388),
  ('atomic -> set','atomic',1,'p_atomic','Parser.py',389),
  ('number -> NUMBER','number',1,'p_number','Parser.py',393),
  ('number -> F_NUMBER','number',1,'p_number','Parser.py',394),
  ('number -> BIN_NUMBER','number',1,'p_number','Parser.py',395),
  ('number -> HEX_NUMBER','number',1,'p_number','Parser.py',396),
  ('number -> OCT_NUMBER','number',1,'p_number','Parser.py',397),
  ('arguments -> expressions','arguments',1,'p_arguments','Parser.py',403),
  ('strings -> STRING','strings',1,'p_strings','Parser.py',409),
  ('strings -> TRIPLE_STRING','strings',1,'p_strings','Parser.py',410),
  ('list -> L_SQB expressions R_SQB','list',3,'p_list','Parser.py',417),
  ('list -> L_SQB R_SQB','list',2,'p_list','Parser.py',418),
  ('tuple -> L_PARENTHESIS expressions R_PARENTHESIS','tuple',3,'p_tuple','Parser.py',423),
  ('tuple -> L_PARENTHESIS R_PARENTHESIS','tuple',2,'p_tuple','Parser.py',424),
  ('set -> L_CB expressions R_CB','set',3,'p_set','Parser.py',428),
  ('dict -> L_CB kvpairs R_CB','dict',3,'p_dict','Parser.py',433),
  ('dict -> L_CB R_CB','dict',2,'p_dict','Parser.py',434),
  ('kvpairs -> kvpairs COMMA kvpair','kvpairs',3,'p_kvpairs','Parser.py',438),
  ('kvpairs -> kvpair','kvpairs',1,'p_kvpairs','Parser.py',439),
  ('kvpair -> expression COLON expression','kvpair',3,'p_kvpair','Parser.py',443),
  ('targets -> targets COMMA target','targets',3,'p_targets','Parser.py',449),
  ('targets -> target','targets',1,'p_targets','Parser.py',450),
  ('target -> empty','target',1,'p_target','Parser.py',454),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',458),
]
